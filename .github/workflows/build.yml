name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3309:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Wait for MySQL
        run: |
          echo "Esperando pelo MySQL..."
          RETRY_COUNT=0
          MAX_RETRIES=30
          until mysqladmin ping -h127.0.0.1 --port=3309 --silent; do
            RETRY_COUNT=$((RETRY_COUNT + 1))
            if [ $RETRY_COUNT -ge $MAX_RETRIES ]; then
              echo "MySQL não ficou pronto a tempo."
              exit 1
            fi
            echo "Ainda esperando pelo MySQL... ($RETRY_COUNT/$MAX_RETRIES)"
            sleep 2
          done
          echo "MySQL está pronto para aceitar conexões."
        env:
          MYSQL_ROOT_PASSWORD: root

      - name: Run tests and generate coverage
        env:
          DATABASE_HOST: 127.0.0.1
          DATABASE_USER: root
          DATABASE_PASSWORD: root
          DATABASE_NAME: testdb
        run: npx jest --coverage
     
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

